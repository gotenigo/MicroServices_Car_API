#http://localhost:8082/services/price?vehicleId=18


# ===============================
# = LOGGING
# ===============================
#output log file
logging.file.name=E:/JAVA_CODE_SGW/fixdebug/log/Price.log

#Do not log SPRINGBOOT at the beginning
#spring.main.banner-mode=off

#Log Level ERROR, WARN, INFO, DEBUG or TRACE.
#logging.level.* here to set the org.springframework LOG level
logging.level.org.springframework=DEBUG

logging.level.com.netflix.eureka=ON
logging.level.com.netflix.discovery=ON

#Include the "exception" attribute.
#server.error.include-exception

#When to include "errors" attribute.
#server.error.include-binding-errors

# ===============================
# = DATA SOURCE / SPRING DATA
# ===============================
#spring.jpa.open-in-view = false

#Whether to enable trace output.
#spring.h2.console.settings.trace=true

# Enabling H2 Console
spring.datasource.platform=h2
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:price
#;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


##https://stackoverflow.com/questions/52480973/h2-in-memory-test-db-closed-despite-db-close-on-exit-false
##For in-memory database, you shouldn't use DB_CLOSE_ON_EXIT=FALSE: you should only use DB_CLOSE_DELAY=-1.
# See http://www.h2database.com/html/features.html#in_memory_databases
#;DB_CLOSE_ON_EXIT=FALSE
#jdbc:h2:mem:testdb

##top jpa from reinitialising your database. So you can use a script for example
#spring.jpa.hibernate.ddl-auto=none

spring.data.jpa.repositories.bootstrap-mode=default

spring.h2.console.path=/h2

spring.jpa.show-sql = true


#By default, data.sql scripts are now run before Hibernate is initialized.
# This aligns the behavior of basic script-based initialization with that of Flyway and Liquibase.
#f you want to use data.sql to populate a schema created by Hibernate, set spring.jpa.defer-datasource-initialization to true
spring.jpa.defer-datasource-initialization=true

#http://localhost:8080/h2-console
#jdbc:h2:mem:testdb


# ===============================
# =        SPRING DAta setup
# ===============================
#https://docs.spring.io/spring-data/rest/docs/current-SNAPSHOT/reference/html/#reference
# you can also use RepositoryRestConfigurer
spring.data.rest.basePath=/services




# ===============================
# =        GLOBAL SPRING
# ===============================
spring.application.name= pricing-service

# ===============================
# =        TOMCAT
# ===============================
server.port=8082

#Spring Release Note : https://github.com/spring-projects/spring-boot/wiki
#https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html
#https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#changes-to-the-default-error-pages-content
#Supported values are always, on-param, and never.
#When to include "message" attribute.
server.error.include-message=always



#Include the "exception" attribute.
#server.error.include-exception

#When to include "errors" attribute.
#server.error.include-binding-errors

# ===============================
# =        EUREKA
# ===============================
eureka.client.instance.preferIpAddress = true
eureka.client.enabled=false
eureka.client.register-with-eureka=true
eureka.client.registryFetchIntervalSeconds = 5
eureka.instance.lease-renewal-interval-in-seconds=30
#eureka.instance.lease-expiration-duration-in-seconds=
#eureka.client.fetch-registry=true
#eureka.client.healthcheck.enabled=true

eureka.client.region = default
eureka.client.serviceUrl.defaultZone = http://${eureka.servername}:${eureka.port}/eureka/
eureka.client.service-url.default-zone = http://${eureka.servername}:${eureka.port}/eureka/
eureka.servername= localhost
eureka.port= 8761


